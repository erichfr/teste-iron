version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: teste-iron
    container_name: teste-iron
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./vendor:/var/www/vendor
      - ./node_modules:/var/www/node_modules
    ports:
      - "9000:9000"
    networks:
      - teste-iron-network
    depends_on:
      - mysql
      - redis
  nginx:
    image: nginx:alpine
    container_name: teste-iron-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - teste-iron-network
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: teste-iron-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: teste_iron
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: iron
      MYSQL_PASSWORD: root
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - teste-iron-network

  redis:
    image: redis:alpine
    container_name: teste-iron-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - teste-iron-network

  websockets:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: websocket
    command: php artisan websockets:serve
    ports:
      - "6001:6001"
    networks:
      - teste-iron-network
    depends_on:
      - app
    environment:
      - PUSHER_APP_ID=testeiron
      - PUSHER_APP_KEY=testeiron123
      - PUSHER_APP_SECRET=secret
      - PUSHER_HOST=websocket
      - PUSHER_PORT=6001
      - PUSHER_SCHEME=http
      - PUSHER_APP_CLUSTER=mt1
    volumes:
      - ./:/var/www
      - ./vendor:/var/www/vendor
      - ./node_modules:/var/www/node_modules

  queue-worker:
    build:
        context: .
        dockerfile: docker/php/Dockerfile
    container_name: teste-iron-queue-worker
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=90
    volumes:
        - ./:/var/www
        - ./vendor:/var/www/vendor
    depends_on:
        - app
        - redis
        - mysql
    networks:
        - teste-iron-network

  horizon:
    build:
        context: .
        dockerfile: docker/php/Dockerfile
    container_name: teste-iron-horizon
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan horizon
    volumes:
        - ./:/var/www
        - ./vendor:/var/www/vendor
    depends_on:
        - redis
        - mysql
    networks:
        - teste-iron-network

volumes:
  mysql-data:

networks:
  teste-iron-network:
    driver: bridge
